import numpy as np
import requests
import math
import json
import time

# all_stocks - список всех акций, all_vols - волатильности акций за месяц. Временный аналог БД (т.к. постоянная загрузка этих данных по http затратна по времени)
all_stocks = ['1COV@DE', 'A', 'AA', 'AAL', 'AAN', 'AAON', 'AAP', 'AAPL', 'ABBV', 'ABC', 'ABG', 'ABMD', 'ABNB', 'ABT', 'ACAD', 'ACH', 'ACIW', 'ACM', 'ACMR', 'ACN', 'ADBE', 'ADI', 'ADM', 'ADP', 'ADPT', 'ADS', 'ADS@DE', 'ADSK', 'ADUS', 'AEE', 'AEIS', 'AEO', 'AERI', 'AES', 'AFG', 'AFL', 'AFMD', 'AFX@DE', 'AGCO', 'AGIO', 'AI', 'AIG', 'AIN', 'AIR', 'AIRC', 'AIT', 'AIV', 'AIZ', 'AJG', 'AJRD', 'AKAM', 'ALB', 'ALE', 'ALEC', 'ALG', 'ALGN', 'ALGT', 'ALK', 'ALL', 'ALLE', 'ALLK', 'ALLO', 'ALLY', 'ALNY', 'ALRM', 'ALSN', 'ALTR', 'ALV', 'ALV@DE', 'ALXO', 'AMAT', 'AMCX', 'AMD', 'AME', 'AMED', 'AMG', 'AMGN', 'AMN', 'AMP', 'AMSF', 'AMT', 'AMTI', 'AMWD', 'AMZN', 'AN', 'ANAB', 'ANDE', 'ANET', 'ANF', 'ANGI', 'ANIK', 'ANIP', 'ANSS', 'ANTM', 'AON', 'AOS', 'AOUT', 'APA', 'APD', 'APEI', 'APH', 'APLE', 'APLT', 'APP', 'APPF', 'APPH', 'APPN', 'APPS', 'APTV', 'ARCC', 'ARCT', 'ARE', 'ARMK', 'ARNA', 'ARNC', 'ARQT', 'ARVN', 'ARW', 'ARWR', 'ASGN', 'ASH', 'ASIX', 'ASO', 'ATEX', 'ATGE', 'ATKR', 'ATNI', 'ATR', 'ATRA', 'ATRC', 'ATRI', 'ATRO', 'ATUS', 'ATVI', 'AVA', 'AVAV', 'AVB', 'AVGO', 'AVLR', 'AVNS', 'AVNT', 'AVT', 'AVTR', 'AVY', 'AWH', 'AWI', 'AWK', 'AWR', 'AX', 'AXGN', 'AXON', 'AXP', 'AXSM', 'AYI', 'AYX', 'AZN', 'AZO', 'AZPN', 'BA', 'BABA', 'BAC', 'BAH', 'BAND', 'BAS@DE', 'BAX', 'BAYN@DE', 'BBBY', 'BBIO', 'BBSI', 'BBWI', 'BBY', 'BC', 'BCO', 'BCPC', 'BDC', 'BDTX', 'BDX', 'BECN', 'BEN', 'BERY', 'BFAM', 'BGS', 'BH', 'BHF', 'BIDU', 'BIG', 'BIIB', 'BILI', 'BILL', 'BIO', 'BJ', 'BJRI', 'BK', 'BKI', 'BKNG', 'BKR', 'BKU', 'BL', 'BLD', 'BLDR', 'BLK', 'BLKB', 'BLL', 'BLMN', 'BLNK', 'BLUE', 'BMI', 'BMRN', 'BMW@DE', 'BMY', 'BNGO', 'BOH', 'BOKF', 'BOOT', 'BOSS@DE', 'BOX', 'BPMC', 'BR', 'BRC', 'BRKR', 'BRKS', 'BRO', 'BRX', 'BSX', 'BTAI', 'BTI', 'BUD', 'BURL', 'BVB@DE', 'BWA', 'BWXT', 'BX', 'BXP', 'BYND', 'BZUN', 'C', 'CABO', 'CACC', 'CAG', 'CAH', 'CALM', 'CARA', 'CARG', 'CARR', 'CARS', 'CASY', 'CAT', 'CB', 'CBRE', 'CBRL', 'CBSH', 'CBU', 'CC', 'CCI', 'CCJ', 'CCK', 'CCL', 'CCMP', 'CCOI', 'CCXI', 'CDK', 'CDLX', 'CDNA', 'CDNS', 'CDW', 'CE', 'CEA', 'CENT', 'CENTA', 'CERN', 'CEVA', 'CF', 'CFG', 'CFR', 'CFX', 'CGEN', 'CGNT', 'CGNX', 'CHCO', 'CHD', 'CHDN', 'CHE', 'CHEF', 'CHGG', 'CHH', 'CHKP', 'CHNG', 'CHRW', 'CHTR', 'CHWY', 'CHX', 'CI', 'CIEN', 'CINF', 'CL', 'CLDR', 'CLDT', 'CLF', 'CLH', 'CLOV', 'CLR', 'CLSK', 'CLX', 'CMA', 'CMC', 'CMCO', 'CMCSA', 'CME', 'CMG', 'CMI', 'CMP', 'CMS', 'CNC', 'CNI', 'CNK', 'CNMD', 'CNP', 'CNS', 'CNX', 'CNXC', 'CNXN', 'COF', 'COFS', 'COG', 'COHR', 'COIN', 'COKE', 'COLD', 'COLM', 'CON@DE', 'CONE', 'COO', 'COP', 'COR', 'CORR', 'CORT', 'COST', 'COTY', 'COUP', 'COUR', 'COWN', 'CPB', 'CPNG', 'CPRI', 'CPRT', 'CPS', 'CR', 'CREE', 'CRI', 'CRL', 'CRM', 'CRMT', 'CROX', 'CRS', 'CRSP', 'CRSR', 'CRTX', 'CRUS', 'CRVL', 'CRWD', 'CSCO', 'CSGP', 'CSGS', 'CSII', 'CSL', 'CSOD', 'CSWI', 'CSX', 'CTAS', 'CTLT', 'CTSH', 'CTVA', 'CTXS', 'CVCO', 'CVET', 'CVGW', 'CVLT', 'CVM', 'CVNA', 'CVS', 'CVX', 'CW', 'CWST', 'CWT', 'D', 'DAL', 'DAR', 'DASH', 'DB1@DE', 'DBK@DE', 'DBX', 'DCI', 'DCPH', 'DD', 'DDOG', 'DDS', 'DE', 'DECK', 'DELL', 'DFS', 'DG', 'DGX', 'DHER@DE', 'DHI', 'DHR', 'DIOD', 'DIS', 'DISCA', 'DISCB', 'DISCK', 'DISH', 'DK', 'DKNG', 'DKS', 'DLB', 'DLR', 'DLTH', 'DLTR', 'DLX', 'DMTK', 'DNLI', 'DNOW', 'DOCS', 'DOCU', 'DORM', 'DOV', 'DOW', 'DPW@DE', 'DPZ', 'DRE', 'DRI', 'DRNA', 'DRQ', 'DT', 'DTE@DE', 'DV', 'DVA', 'DVN', 'DWNI@DE', 'DXC', 'DXCM', 'DY', 'EA', 'EAR', 'EAT', 'EBAY', 'EBS', 'ECHO', 'ECL', 'ECPG', 'ED', 'EDIT', 'EEFT', 'EFX', 'EGHT', 'EGP', 'EGRX', 'EHTH', 'EIX', 'EL', 'ELAN', 'ELS', 'EME', 'EMN', 'EMR', 'ENDP', 'ENPH', 'ENR', 'ENS', 'ENSG', 'ENTA', 'ENTG', 'ENV', 'EOAN@DE', 'EOG', 'EPAM', 'EPAY', 'EPC', 'EQIX', 'EQT', 'ERIE', 'ES', 'ESE', 'ESPR', 'ESS', 'ET', 'ETN', 'ETR', 'ETRN', 'ETSY', 'EVBG', 'EVER', 'EVH', 'EVK@DE', 'EVR', 'EVRG', 'EVT@DE', 'EW', 'EWBC', 'EXAS', 'EXC', 'EXEL', 'EXLS', 'EXP', 'EXPD', 'EXPE', 'EXPO', 'EXR', 'EYE', 'F', 'FANG', 'FARO', 'FAST', 'FATE', 'FB', 'FBHS', 'FCFS', 'FCN', 'FCNCA', 'FCX', 'FDS', 'FDX', 'FELE', 'FFIN', 'FFIV', 'FGEN', 'FICO', 'FIS', 'FISV', 'FITB', 'FIVE', 'FIVE@GS', 'FIVN', 'FIXP', 'FIZZ', 'FL', 'FLO', 'FLOW', 'FLR', 'FLS', 'FLT', 'FLWS', 'FMC', 'FME@DE', 'FND', 'FNF', 'FNKO', 'FOCS', 'FOE', 'FOLD', 'FORM', 'FORR', 'FOX', 'FOXA', 'FOXF', 'FRE@DE', 'FRHC', 'FRPH', 'FRPT', 'FSLR', 'FSLY', 'FTCH', 'FTCI', 'FTDR', 'FTI', 'FTNT', 'FTV', 'FUL', 'FWRD', 'GATX', 'GBCI', 'GBT', 'GBX', 'GCO', 'GCP', 'GD', 'GDDY', 'GDOT', 'GDRX', 'GE', 'GEF', 'GEVO', 'GGG', 'GH', 'GHC', 'GILD', 'GIS', 'GKOS', 'GL', 'GLBE', 'GLPI', 'GLTR@GS', 'GLW', 'GM', 'GMED', 'GMS', 'GNL', 'GNRC', 'GNTX', 'GO', 'GOLD', 'GOOG', 'GOOGL', 'GOSS', 'GPC', 'GPI', 'GPN', 'GPS', 'GRA', 'GRMN', 'GRPH', 'GRUB', 'GS', 'GSHD', 'GSKY', 'GT', 'GTHX', 'GTLS', 'GTN', 'GTX', 'GVA', 'GWRE', 'GWW', 'GXO', 'H', 'HA', 'HAE', 'HAIN', 'HAL', 'HALO', 'HAS', 'HBAN', 'HBI', 'HCA', 'HCCI', 'HCSG', 'HD', 'HE', 'HEAR', 'HEI', 'HEI@DE', 'HEN3@DE', 'HES', 'HFC', 'HGV', 'HHC', 'HHR', 'HIBB', 'HIG', 'HII', 'HLI', 'HLNE', 'HLT', 'HNP', 'HOG', 'HOLX', 'HON', 'HOOD', 'HOT@DE', 'HP', 'HPE', 'HPQ', 'HQY', 'HRB', 'HRC', 'HRL', 'HRTX', 'HSC', 'HSIC', 'HSKA', 'HST', 'HSY', 'HTA', 'HTHT', 'HUBB', 'HUBG', 'HUBS', 'HUM', 'HURN', 'HWM', 'HXL', 'HYLN', 'IAA', 'IAC', 'IART', 'IBKR', 'IBM', 'IBN', 'IBP', 'IBTX', 'ICE', 'ICFI', 'ICLR', 'ICPT', 'ICUI', 'IDA', 'IDCC', 'IDXX', 'IEX', 'IFF', 'IFX@DE', 'IGMS', 'IIPR', 'IIVI', 'ILMN', 'INCY', 'INDB', 'INFO', 'INGN', 'INGR', 'INMD', 'INSG', 'INSP', 'INTC', 'INTU', 'INVH', 'IONS', 'IOSP', 'IOVA', 'IP', 'IPAR', 'IPG', 'IPGP', 'IQV', 'IR', 'IRBT', 'IRDM', 'IRM', 'IRTC', 'ISRG', 'IT', 'ITCI', 'ITGR', 'ITRI', 'ITT', 'ITW', 'IVZ', 'J', 'JACK', 'JBHT', 'JBL', 'JBSS', 'JBT', 'JCI', 'JCOM', 'JD', 'JEF', 'JELD', 'JJSF', 'JKHY', 'JLL', 'JNJ', 'JNPR', 'JOBS', 'JOUT', 'JPM', 'JWN', 'K', 'KAI', 'KALU', 'KAP@GS', 'KBH', 'KDP', 'KEP', 'KEX', 'KEY', 'KEYS', 'KFY', 'KHC', 'KIDS', 'KIM', 'KKR', 'KLAC', 'KMB', 'KMI', 'KMPR', 'KMT', 'KMX', 'KNBE', 'KNSL', 'KNX', 'KO', 'KOD', 'KOPN', 'KR', 'KRG', 'KRTX', 'KRYS', 'KSU', 'KTB', 'KTOS', 'KWR', 'L', 'LAD', 'LANC', 'LASR', 'LAZR', 'LBRDK', 'LCII', 'LDOS', 'LEA', 'LECO', 'LEG', 'LEGH', 'LEN', 'LEVI', 'LFC', 'LFST', 'LFUS', 'LGIH', 'LGND', 'LH', 'LHA@DE', 'LHCG', 'LHX', 'LI', 'LII', 'LIN', 'LITE', 'LKOD@GS', 'LKQ', 'LLY', 'LMT', 'LNN', 'LNT', 'LNTH', 'LOGI', 'LOPE', 'LOW', 'LPL', 'LPLA', 'LPSN', 'LPX', 'LRCX', 'LRN', 'LSCC', 'LSTR', 'LTHM', 'LULU', 'LUMN', 'LUV', 'LVS', 'LW', 'LYB', 'LYFT', 'LYV', 'M', 'MA', 'MAA', 'MAC', 'MAIL@GS', 'MAN', 'MANH', 'MANT', 'MANU', 'MAR', 'MAS', 'MASI', 'MAT', 'MATX', 'MBT', 'MBUU', 'MC', 'MCD', 'MCHP', 'MCK', 'MCO', 'MCRI', 'MD', 'MDB', 'MDGL', 'MDLA', 'MDLZ', 'MDRX', 'MDT', 'MDU', 'MED', 'MEDP', 'MEI', 'MELI', 'MET', 'MFGP', 'MGLN', 'MGM', 'MGNT@GS', 'MGRC', 'MGY', 'MHK', 'MHO', 'MIDD', 'MKC', 'MKL', 'MKSI', 'MKTX', 'MLAB', 'MLCO', 'MLHR', 'MLM', 'MMC', 'MMI', 'MMM', 'MMS', 'MMSI', 'MNRO', 'MNST', 'MO', 'MODV', 'MOH', 'MOMO', 'MORN', 'MOS', 'MOV', 'MPC', 'MPWR', 'MQ', 'MRC', 'MRK', 'MRK@DE', 'MRNA', 'MRO', 'MRTX', 'MRVL', 'MS', 'MSA', 'MSCI', 'MSEX', 'MSFT', 'MSGE', 'MSGS', 'MSI', 'MSM', 'MSTR', 'MTB', 'MTCH', 'MTD', 'MTG', 'MTH', 'MTN', 'MTOR', 'MTRN', 'MTX', 'MTX@DE', 'MU', 'MUR', 'MUSA', 'MUV2@DE', 'MVIS', 'MXL', 'MYGN', 'MYRG', 'NABL', 'NARI', 'NATI', 'NAVI', 'NBIX', 'NCBS', 'NCR', 'NDAQ', 'NDSN', 'NEE', 'NEM', 'NEO', 'NEOG', 'NET', 'NEU', 'NEWR', 'NFE', 'NFG', 'NFLX', 'NGVT', 'NJR', 'NKE', 'NKTR', 'NLMK@GS', 'NLOK', 'NLSN', 'NMIH', 'NOC', 'NOK', 'NOV', 'NOW', 'NP', 'NPK', 'NRG', 'NRIX', 'NSC', 'NSIT', 'NSP', 'NTAP', 'NTCO', 'NTCT', 'NTES', 'NTGR', 'NTLA', 'NTNX', 'NTRA', 'NTRS', 'NTUS', 'NUE', 'NUS', 'NUVA', 'NVCR', 'NVDA', 'NVEE', 'NVR', 'NVRO', 'NVS', 'NVTA', 'NVTK@GS', 'NWE', 'NWL', 'NWLI', 'NWS', 'NWSA', 'NXPI', 'NXST', 'NYT', 'O', 'OC', 'ODFL', 'OFIX', 'OGE', 'OGN', 'OGS', 'OGZD@GS', 'OHI', 'OI', 'OII', 'OIS', 'OKE', 'OKTA', 'OLED', 'OLLI', 'OMC', 'OMCL', 'ON', 'ONTO', 'ORCL', 'ORLY', 'OSIS', 'OSK', 'OSUR', 'OTIS', 'OVV', 'OXY', 'OZON', 'PACB', 'PAGS', 'PANW', 'PATH', 'PATK', 'PAY', 'PAYC', 'PAYX', 'PB', 'PBCT', 'PBF', 'PBH', 'PBI', 'PCAR', 'PCG', 'PCOR', 'PCRX', 'PCTY', 'PD', 'PDCO', 'PEAK', 'PEG', 'PEGA', 'PEN', 'PEP', 'PETQ', 'PFE', 'PFG', 'PFGC', 'PG', 'PGNY', 'PGR', 'PGTI', 'PH', 'PHM', 'PHOR@GS', 'PII', 'PINC', 'PINS', 'PIPR', 'PJT', 'PKG', 'PKI', 'PLAN', 'PLAY', 'PLCE', 'PLD', 'PLNT', 'PLTR', 'PLUG', 'PLUS', 'PLXS', 'PLZL@GS', 'PM', 'PNC', 'PNFP', 'PNTG', 'PODD', 'POOL', 'POR', 'POSH', 'POST', 'POWI', 'PPC', 'PPG', 'PPL', 'PRAA', 'PRAX', 'PRFT', 'PRG', 'PRGS', 'PRI', 'PRLB', 'PRTA', 'PRTS', 'PRU', 'PSA', 'PSMT', 'PSN', 'PSTG', 'PSX', 'PTC', 'PTCT', 'PTON', 'PTR', 'PUM@DE', 'PUMP', 'PVH', 'PWR', 'PXD', 'PYPL', 'PZZA', 'QADA', 'QCOM', 'QDEL', 'QLYS', 'QNST', 'QRTEA', 'QRVO', 'QS', 'QTWO', 'QUOT', 'R', 'RACE', 'RAMP', 'RARE', 'RAVN', 'RBC', 'RBLX', 'RCL', 'RDFN', 'A', 'RDY', 'RE', 'REG', 'REGI', 'REGN', 'RETA', 'REX', 'REYN', 'REZI', 'RF', 'RGA', 'RGEN', 'RGLD', 'RGNX', 'RGR', 'RH', 'RHI', 'RHM@DE', 'RIDE', 'RIG', 'RJF', 'RL', 'RMD', 'RNG', 'ROCK', 'ROG', 'ROK', 'ROKU', 'ROL', 'ROLL', 'ROP', 'ROST', 'RPD', 'RPM', 'RRBI', 'RRC', 'RRGB', 'RS', 'RSG', 'RTX', 'RUN', 'RVLV', 'RWE@DE', 'RXN', 'RXRX', 'RYN', 'RYTM', 'S', 'SAFM', 'SAGE', 'SAIA', 'SAIC', 'SAIL', 'SAM', 'SAP', 'SAVA', 'SAVE', 'SBAC', 'SBCF', 'SBER@GS', 'SBGI', 'SBH', 'SBRA', 'SBUX', 'SCCO', 'SCHW', 'SCI', 'SCL', 'SCSC', 'SDGR', 'SEDG', 'SEE', 'SEIC', 'SF', 'SFIX', 'SFM', 'SGEN', 'SHAK', 'SHEN', 'SHI', 'SHL@DE', 'SHLS', 'SHOO', 'SHOP', 'SHW', 'SI', 'SIE@DE', 'SIG', 'SIGI', 'SITE', 'SIVB', 'SJI', 'SJM', 'SJW', 'SKLZ', 'SKM', 'SKX', 'SLAB', 'SLB', 'SLDB', 'SLG', 'SLGN', 'SLP', 'SMAR', 'SMG', 'SMPL', 'SMTC', 'SNA', 'SNAP', 'SNBR', 'SNOW', 'SNPS', 'SNX', 'SNY', 'SO', 'SOHU', 'SON', 'SONO', 'SONY', 'SP', 'SPB@US', 'SPCE', 'SPG', 'SPGI', 'SPLK', 'SPOT', 'SPR', 'SPSC', 'SQ', 'SQSP', 'SR', 'SRC', 'SRCL', 'SRDX', 'SRE', 'SRI', 'SRPT', 'SSA@GS', 'SSD', 'SSNC', 'SSTK', 'STAA', 'STAG', 'STE', 'STLA', 'STLD', 'STMP', 'STRA', 'STT', 'STX', 'STZ', 'SUPN', 'SVST@GS', 'SWAV', 'SWBI', 'SWCH', 'SWI', 'SWK', 'SWKS', 'SWN', 'SWX', 'SXI', 'SXT', 'SYF', 'SYK', 'SYNA', 'SYNH', 'SYY', 'T', 'TAK', 'TAL', 'TAP', 'TBIO', 'TCBI', 'TCMD', 'TCRR', 'TCS', 'TCX', 'TDC', 'TDG', 'TDOC', 'TDS', 'TDY', 'TECH', 'TEL', 'TENB', 'TER', 'TFC', 'TFX', 'TGNA', 'TGT', 'THG', 'THO', 'THRM', 'THS', 'TJX', 'TKR', 'TM', 'TMHC', 'TMO', 'TMUS', 'TMX', 'TNC', 'TNDM', 'TNET', 'TNL', 'TOL', 'TPH', 'TPIC', 'TPR', 'TPTX', 'TPX', 'TREE', 'TREX', 'TRHC', 'TRIP', 'TRIT', 'TRMB', 'TRNO', 'TROW', 'TRU', 'TRUP', 'TRV', 'TSCO', 'TSLA', 'TSM', 'TSN', 'TSP', 'TT', 'TTC', 'TTCF', 'TTD', 'TTE', 'TTEK', 'TTM', 'TTMI', 'TTWO', 'TW', 'TWLO', 'TWNK', 'TWOU', 'TWTR', 'TXG', 'TXN', 'TXRH', 'TXT', 'TYL', 'U', 'UA', 'UAA', 'UAL', 'UBER', 'UBSI', 'UCTT', 'UDR', 'UFPI', 'UFS', 'UGI', 'UHS', 'UI', 'ULTA', 'UMBF', 'UNF', 'UNH', 'UNM', 'UNP', 'UNVR', 'UPS', 'UPWK', 'URBN', 'URI', 'USB', 'USFD', 'USM', 'USNA', 'USPH', 'UTHR', 'UTL', 'V', 'VAC', 'VALE', 'VC', 'VCEL', 'VCRA', 'VCYT', 'VEC', 'VEEV', 'VEON', 'VFC', 'VG', 'VIAC', 'VICR', 'VIPS', 'VIR', 'VIRT', 'VLDR', 'VLO', 'VMC', 'VMEO', 'VMI', 'VMW', 'VNA@DE', 'VNDA', 'VNE', 'VNO', 'VNT', 'VOW3@DE', 'VPG', 'VREX', 'VRNS', 'VRNT', 'VRSK', 'VRSN', 'VRTS', 'VRTV', 'VRTX', 'VSAT', 'VSCO', 'VTR', 'VTRS', 'VUZI', 'VXRT', 'VZ', 'VZIO', 'W', 'WAB', 'WABC', 'WAFD', 'WAL', 'WAT', 'WB', 'WBA', 'WBS', 'WCC', 'WDAY', 'WDC', 'WDFC', 'WEC', 'WELL', 'WERN', 'WEX', 'WFC', 'WGO', 'WH', 'WHD', 'WHR', 'WING', 'WIRE', 'WISH', 'WK', 'WKHS', 'WLK', 'WLTW', 'WM', 'WMB', 'WMT', 'WOR', 'WRB', 'WRK', 'WRLD', 'WSC', 'WSM', 'WSO', 'WST', 'WTFC', 'WTRG', 'WTS', 'WTTR', 'WU', 'WW', 'WWD', 'WWE', 'WWW', 'WY', 'WYNN', 'XEC', 'XEL', 'XLNX', 'XLRN', 'XM', 'XNCR', 'XOM', 'XP', 'XPO', 'XRAY', 'XRX', 'XYL', 'Y', 'YELP', 'YETI', 'YEXT', 'YUM', 'YUMC', 'YY', 'Z', 'ZBH', 'ZBRA', 'ZEN', 'ZG', 'ZGNX', 'ZI', 'ZION', 'ZIP', 'ZM', 'ZNH', 'ZS', 'ZTS', 'ZUMZ', 'ZUO', 'ZY', 'ZYNE', 'ZYXI']
all_vols = [0.9799095196326377, 9.265877790162259, 2.792850316234096, 0.8489497433103249, 0.8108624352434198, 3.3552712094387966, 4.117222040810206, 2.486013788287499, 2.379058637360584, 1.9983959122812027, 6.014658723116015, 15.532843629619864, 5.760581760744501, 2.4513567445169793, 1.922462223295948, 1.1538170950756836, 1.3951228141875782, 1.4973364870848356, 3.3789932918942984, 8.238182134966966, 16.628178790501646, 3.032110302889537, 1.103635205430974, 3.4852116148090615, 2.701045168078461, 2.759422020802344, 7.4943143263558305, 11.442786257434566, 3.0160072207399558, 2.132283491679493, 6.24183684681218, 1.8002761825157085, 0.5159840652147658, 0.3662338354415416, 4.571257801621878, 1.1397828740597915, 0.4603023161165086, 3.36904866229161, 5.378894310171932, 2.776524306074452, 1.5653063597903127, 3.175016167937837, 3.4491667914955277, 1.2555846800948507, 0.9848501860125163, 1.5323161843721718, 0.22161051920480274, 4.81043085388409, 2.0632978995341964, 2.2774566711331503, 2.49954860369272, 16.561434656722497, 1.6294900702026034, 1.9913659187156496, 4.348365465576947, 25.228592209810056, 4.6498829734377916, 1.522816688464724, 2.748346998146743, 2.9568462177725032, 3.814202130051432, 1.2241915245944524, 1.1341455912810405, 9.579078568537906, 2.861654067143685, 1.0461506689871316, 2.6728969718682047, 4.257841980784788, 5.5825678679260164, 5.578768641515397, 4.81448906946521, 2.53947807411068, 5.915902823933319, 1.2568392454442574, 33.76576682578575, 4.470987512097673, 7.897576731012002, 4.746485354683212, 8.42931603921035, 0.9232756299658781, 5.24822032269564, 1.5036474542480585, 2.974284993443335, 129.4764942549633, 3.890777757152875, 1.051202961690399, 1.6344241255629524, 6.341604949327366, 1.6107027106894132, 0.6798454889817898, 1.0363931043125805, 2.1159192643702958, 4.801688823274114, 7.229780079642813, 12.58913303872299, 1.0281656265191694, 0.842921111374012, 0.9377834978761834, 9.011257829330301, 1.130535959426128, 1.8482468870677318, 0.24596951030564734, 1.1304025340067536, 6.384599039006982, 7.637869220026107, 2.1731303586199227, 7.665966750659842, 5.6559599735343085, 5.861665254478079, 0.15585748475949296, 9.471262528770326, 3.233098702827091, 0.7657446629842671, 5.812573239681944, 0.8794293604377781, 1.5323879694414497, 6.660503025714767, 2.16951159378224, 3.417822633718075, 4.941554366346238, 2.281810221926637, 2.193882403411815, 3.1101892761266696, 1.7795450417327332, 0.7961473900394744, 7.727005234169891, 0.9654901461031192, 3.0350182316860415, 0.9684273620440282, 4.028490811981854, 34.7633934860604, 1.6712409228540994, 2.092308268130891, 2.275561078552326, 0.7331579335692654, 2.725315883831939, 3.1188220889018705, 7.006837105443668, 6.73355643194755, 1.6924848596073172, 1.5829544809908114, 0.7939157525973533, 0.937138730391611, 6.760856750442207, 0.427858881200592, 2.2369469272996976, 5.425560913142732, 1.8226649902455105, 1.0133754925440466, 1.7827441082655568, 3.992078559124586, 4.020368543084354, 13.412557532236557, 5.737605036559728, 3.2555824875639896, 0.9510868636576904, 30.2968493778185, 8.966995217029067, 6.914234560351244, 15.045531197003317, 1.5574785891162537, 3.2345342099838055, 11.11846072979529, 1.109321113714751, 2.5039617719836618, 1.5107961109590162, 0.9685040010242599, 2.879669811319037, 2.3882240030802993, 2.89618038154897, 2.946505368888522, 2.7922783210529394, 1.3648965772785362, 3.2784495658093524, 3.1122650736865083, 0.3477369695617652, 4.9216551416503505, 1.9023535423259266, 1.2531340710394878, 1.4073260697744023, 3.900543494893442, 0.5738843282598174, 4.918160631780952, 2.539499272603864, 9.412850253185212, 3.420198759656455, 5.6856822223312244, 7.636660002907031, 29.00152184512622, 36.61373357392308, 2.687146855350898, 2.263492483358896, 1.8034658300062136, 2.722609532537978, 64.78905012423012, 0.7926467617349415, 1.1784038639900436, 2.918967492491517, 8.79625023644861, 3.3079650676645436, 28.91296598798232, 2.2307934811531878, 6.129966249680517, 0.8642672554765044, 1.6937066845629831, 3.628925598575975, 2.8218594342501664, 2.8041723675028725, 2.590667524446589, 0.8756153391885177, 0.2844964362206006, 1.2079726358195724, 2.1626352494635395, 2.4743321433379877, 1.6906126765827294, 0.8362382037035458, 4.534297250462916, 1.4432232444543491, 0.9137568361197391, 2.8885770429976994, 3.7429032848846084, 1.607423922512871, 0.46990590074562333, 0.7249466647048364, 1.6857878145115288, 0.4471345807845032, 2.6242504961734636, 14.947090448943191, 0.24607045061662047, 2.1735966098202817, 1.444764340645214, 4.833737500343003, 1.8830757640980174, 3.4673485867766782, 1.8693958917254527, 2.0946449181981497, 66.83856253856919, 43.12019269695141, 0.5084006512802891, 3.4687178066574145, 0.7135999501743882, 1.4916115073600393, 1.1737367204313278, 1.9330234234368593, 0.4759506276915706, 3.5687565372580723, 4.339578128497442, 7.002073375476407, 2.6724279638976656, 3.6877548273531784, 1.0987530305861366, 1.2871424422598545, 0.8642420571421722, 2.100463573171938, 1.157399131674117, 4.685268354700248, 0.9203438970780917, 8.595577732506149, 2.371361282751604, 0.709612100610843, 3.0033378653313942, 18.554165584998845, 5.020303709272311, 6.5420450081674675, 7.114767553007853, 2.9617203896834434, 0.5998841554833734, 1.0180960443669127, 0.9593467684952202, 1.644736250385859, 2.5416024909930788, 1.2773585592498637, 0.9302140733305537, 3.9311885253981687, 1.4963616615719004, 0.30412643569556547, 1.039628619588104, 2.4963648237654157, 1.6562982823151147, 1.4202374214663311, 9.326766672087146, 8.930304617176033, 1.0921621776193413, 3.2147824533274743, 2.0588601215235585, 1.7953223170846573, 0.4177996595924362, 1.1882188350636442, 28.93344412613196, 3.7923365562085283, 0.7877676617435426, 9.411707366655403, 0.9303237190474192, 2.7458984564862083, 1.9029926431807354, 0.0649178968646806, 0.3209646917237679, 1.1214007114120965, 3.774725906164137, 0.3238142471644303, 1.764841698913028, 1.0545440826358197, 7.062868955947639, 2.615094134698278, 1.3082853919029536, 1.1071348909083603, 0.9073005749658338, 5.345504487157618, 31.24283669721572, 3.4627909264060386, 1.261834863293222, 0.7776732390063756, 2.958099164441022, 5.616083886679599, 1.0161387153774275, 4.397612496192299, 0.5597995673056164, 2.1607679704730507, 0.5998162681651404, 4.798159322999692, 1.2381693027297285, 5.582246909225315, 0.2863300349053321, 0.6221869136807325, 6.252934457783272, 13.415120258706423, 6.963553379321989, 1.010302539946437, 1.8300775939833815, 1.5482522045483715, 1.78116569196193, 16.14348668452182, 1.1857862370596142, 4.254633343648884, 0.4461097274089514, 0.6072886921024923, 11.960209887604636, 0.5625793771154037, 13.074830935809459, 1.5716263338762593, 1.518401791358269, 1.0385661055299056, 3.4061267673936557, 3.2363177978821684, 3.0828179028645555, 1.1731566628355974, 3.0093130445335854, 4.676782001428854, 2.759647904272492, 16.08059040168198, 9.179974558183092, 15.548873417568087, 4.966447422454001, 2.224808506116626, 5.759757286552968, 1.126790377823469, 19.649827039103084, 2.163428580337753, 9.416780890162697, 14.551144956860114, 1.7621647356463455, 2.1839882987069523, 1.2122616604237444, 1.6006368524226011, 3.9744489625048103, 3.839137649119772, 6.783058151666465, 0.6987557195154512, 2.9046235938968423, 5.958915412127353, 2.5455626751925258, 1.224754896114139, 4.420790980004471, 11.71196474645575, 1.3694532972443174, 3.646189548312351, 2.552254537114632, 1.1692877699218824, 12.833863404637313, 1.565014873908729, 2.4728387645690844, 1.789008446660391, 3.0507318065597895, 1.2080769383151424, 1.4930876285960806, 0.9610653810572238, 3.530341563582135, 5.470675765692331, 3.3313510772657997, 0.159544142272079, 0.6628558583047215, 1.3803248007463886, 1.893021717313941, 1.3297486813513137, 10.349892559828822, 10.709401892210828, 11.247918074025966, 11.535277408406303, 1.6702424641018099, 3.689545364946742, 4.555540472874762, 4.640873971809861, 5.532433661800404, 1.7741813761719964, 12.053799603813264, 6.348044808355473, 3.2732851490004142, 0.5447054249775743, 4.655321745653629, 0.40750746414431915, 0.8327668074290394, 0.9022512584271266, 4.081530064408036, 13.996766614710221, 1.5051566548222004, 3.9945835688953713, 0.5292981726357605, 4.296550864744106, 1.9286823366110757, 1.8890004411504693, 2.4852320258322402, 0.9469964801060948, 13.727367397526253, 6.584635693963805, 2.5849620886968543, 3.914527373202995, 1.2371168991741326, 0.9069852994031016, 9.395210180370277, 0.9465575641355478, 4.6654532827297, 7.480883853009765, 2.118434537314969, 2.2517145072637916, 0.4517384936737919, 1.689798278559374, 5.035830903524154, 1.4366922271508102, 0.39749716980124566, 2.37413666179706, 23.737380855707077, 3.0197427410662367, 2.907633325499547, 6.7750714305377535, 2.3411056267403985, 3.5465043195925885, 1.3709594774787799, 1.4840635281400707, 2.5381551480466205, 0.7486002493543089, 1.1466257744646526, 10.194812646090604, 3.384269640557622, 5.706015149724796, 0.8590767654225607, 3.5251783406422637, 1.864145470003168, 6.264601973700236, 1.2961792142892727, 6.786790445826038, 2.455026612211499, 1.4489806761996515, 1.504447480712511, 2.0942201943019794, 2.2731573978841757, 1.0763363786474933, 8.076541916769411, 1.1031351785806771, 5.260913408229495, 1.8806906532796233, 5.4287733011754655, 3.512773453175329, 1.903259805935303, 0.3546791977736125, 2.799087331415169, 29.190183898016127, 1.5035241564035116, 1.4594384384260801, 17.480983474113298, 1.2294022486106362, 4.808213863333822, 2.019098148514167, 2.1092813152035146, 0.8447117193983333, 7.502036434640045, 0.28821982351439074, 4.97009261036005, 3.690703350612486, 0.28700058071950535, 11.366738948939284, 6.538427308356854, 4.414247752700591, 0.8911774982198177, 0.41954260808647303, 3.5068574092610167, 1.4108873882143196, 3.3389344441336712, 3.0746577948701135, 1.646393499609238, 6.9348564032237405, 0.9425405384738986, 0.992944890492698, 4.8980175581555425, 7.441396590843833, 2.153491738239706, 7.772204184714196, 6.887160751878978, 5.193505228220681, 2.321671428566545, 0.4917433838452285, 3.430599056854194, 2.5858699159513465, 0.609216710210742, 7.869637263982797, 8.148835745061989, 1.8734597822092567, 2.714683939041319, 2.3631890176905714, 42.165323741461094, 1.549691904863673, 12.148079267476357, 8.091102905180612, 1.525760138422813, 0.726230450109789, 4.530574025440927, 0.6943329332692078, 33.75430812997554, 7.722168844739586, 3.153266119791069, 1.016563328081433, 14.633332665148052, 0.7160117938196887, 13.543133151363294, 0.7103507740702631, 1.191575241248137, 1.5185689169595018, 0.6015077352416638, 1.9665361821119778, 0.5373599042231068, 1.6471034845718988, 3.837568399679962, 0.8195199136621936, 6.012278187176638, 1.4143840433991826, 3.5473282747567767, 1.8443001985095115, 0.7753815548203064, 1.133832439119643, 0.26731608423154946, 0.8319474475924278, 1.6033638597232587, 1.2771647853307297, 0.4551024304727695, 0.6686408270181796, 4.648060300335565, 0.9000854897668829, 1.4213483817214634, 1.0863028532084822, 9.247696824375005, 4.838423802116645, 3.4504914947809326, 3.273839132679959, 0.5250808403368846, 3.081717847060124, 0.34788072668660447, 14.581537889475936, 1.9787598810029137, 1.5487206548201864, 1.324162838257523, 2.230632097759635, 0.9961763007732226, 1.892019967007631, 1.1850080168505186, 3.257970670354306, 0.6159528300843244, 2.584934149171998, 5.790617324603655, 2.32721820110525, 2.468855785356627, 1.8914394577205529, 1.6026514142369055, 0.4068496855924393, 1.0097192128947972, 8.488503440929188, 21.556634042034986, 1.5330811749183046, 0.9044222219492156, 3.7311959506600862, 1.6681328550874546, 4.231318470642452, 0.9729326229954921, 0.34214113397186774, 0.6021845416666076, 3.1286318628648746, 2.6664714303530213, 1.4965812893242898, 0.5281939879333055, 17.192213447436664, 0.9553699109071134, 3.3917836834850705, 0.759037109325581, 65.00204800534277, 69.97986488507485, 0.8889656911264913, 2.0624572453481047, 4.279135231952053, 10.884455118297023, 1.2661298862632098, 0.09603471594515445, 7.2450412237152495, 1.3043867865356842, 0.8010310023130607, 15.855762639775136, 8.428922884924269, 0.719290159346931, 0.6159314536176537, 1.3799254810798058, 14.481740844556256, 0.40938436164020214, 0.23469815129698446, 1.2949637918576034, 3.1565782458577223, 9.140564436741432, 6.8743555879805935, 2.8973398527308145, 0.696773197596527, 1.8548166725821953, 1.5077757348712924, 0.6944318221075093, 1.088006535928081, 2.1178683203216915, 0.5454645318951137, 0.6956480591665746, 4.138367579399181, 0.717791055948735, 0.5159633923276169, 4.193989667766639, 0.5186993348752236, 1.4403641900575006, 3.579414927362044, 1.057023283670811, 2.093485026350931, 3.7453559985074265, 1.2016923714310395, 1.6158011428803154, 1.8888580030154618, 4.548073108471322, 4.626180858260227, 2.026620640924745, 2.3557505291425804, 1.8234882322991106, 2.450796718529621, 3.083364612453954, 2.5214954998087062, 0.6396892474735948, 2.257283741333573, 1.9188532744555755, 6.528664742013444, 1.365535141335522, 1.57438608846609, 0.3512518880929878, 0.5979781675687573, 4.672680708116059, 0.6140612528259879, 6.574510746478067, 0.8954316773986103, 0.6960111748783605, 0.6820476522941781, 1.7181865116712125, 8.183566086303019, 0.4175223214259196, 1.6056020331604244, 0.8590177853546196, 2.20073674532467, 4.014673654925834, 2.3235250996898857, 39.50609830421402, 18.327245416470955, 1.1847857752916073, 0.5833962823177934, 1.3664422986557307, 0.5838406365515243, 3.2221863522907683, 4.689619991712192, 1.7696355243068804, 1.3687735386103863, 1.6431622629010856, 0.4265489420922296, 3.3243757810051098, 1.5921928973030324, 1.501133682698957, 2.2758789266762176, 10.544706123084808, 1.3875534424142213, 4.1214508772194955, 1.3143913251218442, 3.0226813703509463, 10.238706103149301, 2.4331070442725875, 2.6358017123195485, 1.4865637109342695, 4.933081480057764, 12.055789369980435, 3.0146494913265713, 18.117201660300626, 1.5875746701599063, 3.0038560588387426, 2.3376279762946797, 7.239146788277071, 1.2495715265642058, 8.245508305873097, 0.3452002639370691, 17.395534551525955, 0.5640454079435644, 14.104912619367772, 0.7962735431719152, 1.0385909792705799, 2.8336889188633427, 1.0378236309165871, 0.7979721521178265, 2.158470883647856, 0.8453546921591885, 17.59084244397888, 6.047364797992595, 1.8280557066639596, 2.9370442625197195, 1.8653966215139222, 1.545474576519027, 2.5406308053097537, 30.912615477611514, 17.468057581387423, 2.266263420012971, 2.883985070850556, 8.01838085622999, 1.5369118025732276, 2.515631597299838, 0.5333629158462369, 2.7835757379473054, 3.424453565493658, 5.262233672331763, 1.3338484005146742, 2.8189491540879796, 4.247674461788866, 1.5547462815520732, 4.848066097825903, 4.799128867710148, 1.4343122238744097, 1.188922995357096, 2.5190870480306065, 1.947642905896481, 13.804717812722172, 2.148630571627738, 0.8689408623273632, 2.647897698594533, 2.6859380525660335, 3.8885453578427, 2.846762761844096, 1.205512569638141, 12.204318361410715, 3.3287058546327986, 1.3498600750530487, 0.8711428636503252, 0.5320839532755461, 0.3143282078055072, 2.1529278255952327, 0.46560844303150517, 6.343501740626649, 1.5882353939723999, 1.0680241882404469, 3.16441288217718, 0.45246681891849505, 1.5343596565197988, 12.80379555270841, 1.8492239813860636, 0.5688566505622389, 1.908094482869115, 0.9001397422375901, 4.521054707329547, 1.8308070169554553, 4.544467943432859, 1.432520273271319, 0.4225058842456778, 4.665844975278685, 0.57997662788158, 2.4153740221064446, 0.5168306191479844, 4.472404821669087, 2.5538306956848627, 12.534795765743015, 1.407174315980631, 0.12705904139414903, 7.022115983725195, 1.004610704037473, 19.3042700083571, 6.987187671413696, 2.9257078915480728, 0.8876085849066582, 5.039416456517779, 3.111565879460408, 4.395853298532859, 5.663208121040777, 1.9938279486678094, 0.8188493960023011, 0.7850396309882848, 2.0848943751556215, 0.5961360769339688, 0.10361735161427153, 5.004238459546068, 10.824114929175503, 5.2054243076066555, 9.4599529538412, 8.33847191569828, 0.4673424868337996, 14.4719134878564, 2.8374039190781426, 1.5954008900586714, 4.876503346547492, 5.8132335713917005, 2.8371280666664767, 1.1923280682019606, 0.6913951274215208, 9.130599645636035, 5.920741592064293, 5.3948072151735795, 1.0343780203044188, 0.9162047927304368, 2.4509849775141404, 2.5114412860613196, 7.0156284267499665, 0.4630459540429606, 4.115336910738765, 1.9009922555222454, 3.2023590089529668, 53868930770637, 1.887826174907708, 2.707768433394718, 5.693531378288484, 2.5854499071191115, 7.15455662885937, 0.34810662478933413, 1.0793804807491294, 2.3388586010179315, 2.6901084034332556, 2.5265707105789765, 3.2447533890198117, 2.769195410624217, 2.466509657165138, 13.342728793866215, 2.5447083439081086, 0.5232612476892718, 0.5773857751394064, 2.9902018698111714, 5.137993728641127, 3.4194289484259395, 0.7386868228296903, 4.740277546960961, 1.0067620815708582, 6.125958609792336, 0.6174198103577682, 5.04443500855701, 0.2276012595161402, 4.151905586595149, 1.6512567604369974, 2.979546591159278, 6.142017086339705, 3.3306881004114204, 4.062758778082803, 1.6769410312298463, 1.7433213511379175, 18.57940579123981, 2.7932550705026715, 0.2219569527833921, 0.9045308176065645, 0.7107851683564844, 2.418619073401643, 0.5274067584785854, 23.67149826033175, 4.955570838292328, 1.0765178431715225, 114.5050359591228, 1.9025363480248028, 0.16470040140273554, 0.10944354201545735, 1.8184830369171876, 0.38298476906181717, 3.412735445683158, 0.7333981789511678, 5.3067519779574726, 2.4905672044737126, 5.881505296737863, 1.418150752055492, 27.141729137170973, 6.541270255505086, 8.417238139015009, 8.692620503750424, 0.9845204698509602, 1.007421405812329, 10.96848459602936, 3.6346744313930257, 0.8366454844596158, 2.6003825359614554, 2.2965282977185857, 2.516255595566998, 2.2388009935876148, 1.857226755736148, 0.9149146894049137, 11.637458967584898, 8.268855120269068, 0.5511728341051975, 7.68516297087374, 1.224127807415912, 2.4925102250988305, 1.9068114455522045, 24.491952247399322, 1.4757499411786839, 0.490120280022046, 1.0439563634984397, 12.370803890163684, 32.05040815999419, 0.4143026269125827, 11.838764218541659, 1.3607539168498557, 3.485716505333666, 1.7568117903368743, 18.853098313009458, 4.176363237182429, 6.777979877679053, 4.920452508549279, 8.93447283777218, 9.168159932917597, 1.7022992294736756, 47.69878962009646, 3.1245807540994814, 10.868599030642766, 32.97047506819125, 0.6777803642937897, 4.791085889440931, 7.34787773593316, 0.7112200003436974, 1.8516129905211465, 1.2854972665168216, 5.884409684355208, 3.6488074307459235, 0.8166169372614199, 3.4146612651265387, 11.27080298825243, 0.7328025351727132, 3.326524445857702, 1.730434788010099, 3.941285534780074, 0.3665649859013935, 7.21441455236205, 0.9814631367957175, 1.034081503342728, 3.059027005801389, 1.9798518463090455, 1.5566282650509582, 3.1583972025204305, 5.860870327860872, 2.912062365785152, 1.934123286889667, 2.439799991802606, 0.5815902528603984, 3.4631832498760775, 14.362311265561988, 4.418812422158495, 1.3775255190215374, 0.848612200399374, 22.72216629197138, 2.1101510214516237, 0.9141064854089301, 2.8210103784912857, 0.9563930503023673, 1.03424497420421, 0.9380351213514815, 0.8756539778296496, 0.5161067934276995, 3.103970951324555, 0.12246768281197025, 0.5151206978304536, 24.453022162687546, 0.7520930793459012, 3.9134633851189498, 1.5070052716858318, 1.2999126466377995, 5.018063028256576, 2.088934576923525, 5.07910391265581, 3.4289675154807484, 0.9847520274442472, 0.7320734632231628, 6.4164458490143375, 0.6747839160304088, 11.396024496873165, 1.2358471678254654, 6.839091403265658, 2.8108984131214867, 0.5731236050510108, 9.5966565300398, 1.1851292006453222, 2.3100569738043744, 16.664513860962824, 11.832279882686269, 4.509031184436656, 72.88427556674273, 18.54552301769891, 0.9739573342240859, 1.9758452762186507, 10.461497662062222, 0.8992661205424981, 0.8387387356421939, 11.391890897573688, 0.8035894474170254, 1.0649052644353971, 8.235065330645533, 2.5560346024435776, 2.8973341003220345, 0.765729064356317, 2.087391806910134, 10.809738536256194, 1.4658088779464626, 0.9045431013623517, 2.4174385204178415, 1.1431826917280836, 0.2484719970808246, 1.5298315448295468, 0.3850275603411036, 0.6657547095840429, 0.3216424861377752, 1.0312829658030604, 11.918790188419106, 11.010262162586725, 7.270639005999099, 1.320762784656401, 3.9124967305630634, 3.0308749928398933, 3.8210043618574074, 1.0140853021319267, 8.501770952768211, 1.3661574661151699, 2.6990968859972417, 0.5093666001352397, 1.168010844698513, 1.4535209741253214, 1.3589399872286079, 1.0049457696811315, 1.839556740087133, 1.8798332077311768, 34.02623598865375, 1.7453222879711616, 2.664169351473988, 1.4252569359007987, 35.350412670858596, 1.4979767465929958, 1.0512923792488293, 0.3368727092274203, 0.685972464623925, 2.6577749465796887, 0.35186313627128746, 1.8650271371275597, 0.24661350778540556, 5.742085267759633, 1.6128601578837793, 25.166509968607087, 2.079259056063535, 0.5628874961600525, 0.7232310987659631, 0.7774348847331195, 4.793463419653427, 7.521577176511731, 1.3489716659572766, 4.3816480410406715, 2.4716994828120455, 2.068875593703551, 2.164785337061289, 1.607432908570542, 4.589460159491044, 1.0582751165090392, 0.8614434914078161, 6.444922514834621, 0.7852408689199909, 0.362100200988008, 5.120572190249401, 0.8836480571409008, 6.788246746317408, 8.75045617223595, 1.5142027238414582, 5.148694937122955, 5.524409913184294, 3.3649305094360167, 1.7859002087338354, 6.642397626024974, 2.87044845509083, 3.334911443102099, 1.5537742221228066, 1.1599439162687515, 6.574526438374775, 1.7212954101167206, 1.981265728994697, 1.5713109883858851, 3.5021003221876223, 2.75200131217669, 2.600177536673644, 12.025108823716403, 8.203243403272477, 0.9887741568898999, 5.16403052103899, 5.059068743904906, 7.957171161216084, 2.775996797948842, 3.2677082693125046, 0.4755021906714345, 1.3449974803776483, 2.0596160375716206, 9.919154248220964, 1.384151926471786, 0.8366215127257699, 2.6950098123919495, 4.768983224965256, 6.358449880976408, 0.8659164060244049, 2.813948116081744, 6.069496739159409, 2.3699447016521065, 1.8353438975358876, 2.2135406780389943, 2.514471890653958, 6.425699797600949, 1.8541803819717457, 6.757902205730875, 1.316535225506709, 1.6564864087043463, 0.3999556919904448, 4.854173965659748, 5.684565154873324, 3.7573504257950487, 9.698397009586458, 5.055846835320689, 0.1313671699220666, 2.48312368242547, 9.340727339036413, 5.467818415256875, 0.7759671384794592, 0.5052836387174591, 3.9667374783595433, 1.1728453530718455, 9.03215099273454, 1.6259493295371237, 2.3032552808772384, 4.276563794553857, 3.134798168232774, 6.441484896098621, 0.22481819815624846, 5.516582567334803, 3.7754395770558955, 2.7470866183811693, 4.538420785055328, 9.265877790162259, 2.74031433720051, 9.633569322368992, 1.625003965807127, 5.1931898675091785, 37.4838187251809, 10.463072997717044, 2.0885227368219432, 0.6898631909460179, 1.3959540345823238, 0.567352917797497, 4.325439271205745, 19.40912408865709, 3.7540645972066073, 1.312174658089895, 2.384397454750827, 22.616867736762796, 3.212803552454875, 1.0605457714466326, 0.6239698176461208, 0.21720548386774724, 4.414517665863649, 4.632133849534144, 8.743374380384015, 8.547104746962892, 1.820876345792506, 7.3925447806106215, 8.104672349261804, 41.797129732660935, 0.7113905787649674, 5.783985899783028, 5.433013119398438, 2.576261287645765, 4.040610844909469, 1.576871586401378, 0.7071982277504187, 0.9035756747500454, 1.9720490189985986, 3.2902742877895292, 3.0340783700418075, 1.339893901272288, 3.5906266243589786, 5.225375010465756, 1.335619082423328, 2.73920742794943, 4.7007990337341115, 0.6237275046043743, 2.4610264570341824, 6.402997180140631, 5.662396391006978, 1.5244992256111145, 13.868097045617567, 1.926158410469456, 2.5380067638470414, 51.15795656591455, 2.8745538011238447, 23.76954963580271, 1.6190416918659016, 8.22131292569637, 0.8825247242366008, 0.6191809105584574, 0.8140421092029303, 1.3595162947002715, 1.0504522306553923, 3.1875212243302093, 1.7423539632730582, 2.783438640722418, 2.081047946481665, 1.860773913068311, 3.3639785307810093, 5.32589820280736, 16.24721503998626, 2.003485851099417, 0.7661990602969959, 1.5306569395742031, 6.241354945487043, 0.35196527606506217, 7.418472319524792, 6.184895256456114, 9.606985976650302, 0.3530736467084453, 1.9451638034423284, 1.9503495128366666, 1.3301712504619678, 38.38267970061495, 7.365819114139463, 6.482329390993126, 3.2566532923642106, 6.156041016757442, 2.224545996127949, 10.218664100556394, 12.885019229925717, 0.46112856727333157, 3.363387660611776, 0.7785231032038936, 1.4604825686509693, 0.8980086611807013, 1.5174868112185427, 5.966607411251389, 0.7910260566013121, 0.10841740327702619, 1.755983453478103, 1.2034295437069293, 1.6385935703794543, 3.9400215594446792, 9.710689213438972, 1.0002155878720453, 4.096470960880026, 3.667412060598349, 1.8612553708600967, 3.0195015961063674, 12.935977118099741, 19.174567588924198, 3.7520709688857896, 0.5627757595664157, 1.0350946816596052, 1.3055305009416243, 0.8867509358451346, 3.1257233118467505, 2.2427916384125695, 1.0503853261224347, 3.2797273599425236, 3.075711227595262, 3.543789622549409, 9.763349129382917, 5.9593676864431036, 11.431411869639435, 1.723166626366186, 11.7637942150198, 8.025699858717758, 4.3968074276178575, 2.1961425778446677, 1.0249401066512238, 1.829826828479193, 1.8080255959348461, 1.0553748149354325, 2.0291080689691112, 4.797333240689271, 0.1717168211523457, 1.4365901371728196, 0.9070416503973533, 4.931706668757447, 9.707907939178018, 0.649102371655572, 3.0446139145857054, 0.8940196990123999, 3.9153472387516275, 1.1058492965439093, 2.114494003039236, 2.606233467839919, 2.561634569306611, 4.779313990754554, 1.2839428855417725, 0.6468096061954142, 16.233007419726295, 0.7359480658005396, 1.8047741933241643, 2.053711437049194, 3.996740407993606, 4.245749364560593, 0.3263060935175233, 1.2036415117836736, 3.3504241854162617, 1.021107514199927, 1.6707405211129858, 5.768735813754081, 13.937154882623005, 2.351288275723663, 2.71315865531098, 0.35594881030220604, 0.1529288142314007, 0.49494735971503967, 1.305197303092525, 3.2312481936380077, 1.9430293930412428, 2.7128289662269536, 1.4949971757684213, 4.341137856471375, 2.3178390558640793, 1.9931956474187098, 18.64484255468221, 4.823489331732095, 1.2030668680039727, 5.082842697633764, 13.094063523427538, 4.31933339764367, 1.7662326825446544, 4.456064544216368, 1.2680771094675416, 12.517259839473214, 0.24215605620251474, 6.121095807850823, 3.4150975909270223, 2.818049069046802, 4.688781753647031, 3.419861092045829, 2.503217573888098, 2.079698936545065, 4.580862133800678, 1.015983869075795, 9.960459856630905, 2.66608120656517, 4.583517378123003, 2.3271637721102105, 3.683980350412068, 4.93295043559126, 2.2757784748667143, 2.5687961945021813, 0.5643270328453175, 2.0095686657146663, 1.3404665854345885, 5.5045734520386675, 1.9378229766645063, 12.695167216963574, 5.412810483781355, 4.205614884360616, 1.7580684160622297, 0.15976927809257396, 3.8561486255358757, 1.0775396357752538, 6.265516702998689, 1.6405251191818628, 10.111659584635728, 4.916610406457777, 4.969878827049562, 26.52519288022867, 3.116635668295043, 3.8478062436781935, 5.476069393278358, 3.9632234355383003, 2.169330695552586, 1.8644274962810679, 2.6508267054302554, 0.6766145300111599, 5.064318052150092, 0.44492646083994086, 0.1715553036843286, 4.632361061057311, 0.8622593706201298, 17.182311628209078, 0.2395089884650587, 3.5237799149335207, 2.667094549005215, 9.18728668081907, 2.380363184240775, 3.5482303100747754, 1.873204295674482, 9.15792555962078, 9.09318157864574, 1.4153462081373902, 1.7678398934544068, 1.2741781229046778, 2.065486356500301, 0.7282906165963029, 3.95032009954749, 1.0891793036757333, 1.41458529454945, 0.1190686076736159, 0.5937478888851355, 4.186377697033826, 9.319157097076966, 19.363163125435428, 2.0648030575981484, 5.341468015026913, 5.9798638408876394, 0.80849853981865, 3.3871945946789404, 0.6448338287238554, 4.941231616600146, 5.143823307834574, 1.7553717238490796, 12.274272320589928, 1.0226219568670858, 0.8344633005710919, 2.0139571053580614, 2.1724264212063793, 4.118375637176492, 10.931907305376006, 1.3791458306583182, 6.7092199000082475, 5.066290380764038, 1.4193306716743481, 4.281891910514947, 2.9112436441417184, 2.3986322259895436, 4.367344273125259, 2.023651704770913, 8.394955502496057, 0.1726914396643138, 2.5751485178313285, 0.53703931161715, 0.9817132982699175, 4.394231319456099, 1.3095794066119943, 5.248122510849845, 0.5100685139164038, 0.5812511409785694, 1.9667477101945634, 4.410785530945706, 5.350017663522243, 5.3627628037131085, 3.3356613370597983, 1.3062579717991731, 1.2064707023196026, 2.6594389759245587, 1.0610652927862432, 1.523529673707298, 4.071109717673221, 1.2051962034826067, 0.9065248050782848, 4.009304123604937, 0.9361208967506999, 5.409145547640179, 3.6604787331106787, 17.954398807967806, 11.673335908052259, 2.6698023439115395, 1.8385749614549003, 3.4237880702520123, 1.9620602833642893, 0.3804530924510348, 1.0602953466946, 0.5257815346911893, 0.4016307037842377, 1.7921354115505148, 18.799149286307852, 2.4722194481882056, 0.7966111556671384, 0.6293630819240111, 2.641349002982293, 13.927884105874325, 3.247399369752151, 1.2705266187250426, 1.3962246317202058, 5.39889305526811, 14.281900371526968, 2.253362820319888, 5.207827538107101, 0.9632600318132634, 1.4392028657867821, 1.0751579212169515, 9.285207734168722, 1.9750484944819853, 2.1610214920006907, 1.5001771747215582, 1.6813476407004255, 3.7115385249546065, 3.7204276934543725, 4.502841029098555, 1.4651607420348116, 4.802020465965919, 0.8190542649232033, 2.2369867878217087, 6.660137002261207, 2.9624161310209822, 0.3911903486653129, 3.2138216952545604, 2.2431149225029805, 1.2085609440800067, 1.3829776651205263, 4.186845816230742, 0.7488243378048612, 12.233107577390138, 4.674521496604991, 23.07738672139653, 1.5756934628565569, 0.5904390080458964, 8.115250827916533, 0.16628656657175356, 0.6206738273843999, 4.118893338426395, 3.7228373886354764, 1.3509784108810434, 1.3728775942846794, 0.7559115909505107, 4.09960073936746, 2.774111749731795, 0.6111501906696547, 6.211480848665103, 3.62414742464425, 2.2671779815444575, 1.062002510982593, 1.6978377098206094, 3.0213014303993795, 21.558094022637732, 2.4100548864197173, 0.6887463651850045, 4.264811002716168, 12.52658852201988, 1.2309738240740764, 2.417696079604162, 0.4070993599711118, 3.618936062190407, 1.5183442736524992, 6.563238876923157, 5.754245437549179, 6.201142869575649, 14.388631040589734, 9.008064047779017, 5.709438929429833, 1.2305296510942845, 3.864064124151611, 2.082136963154282, 1.7480406809402982, 28.997297975654366, 1.1037039156102209, 14.84421434618739, 2.7778978662930642, 1.2011505595330947, 0.8506536049153942, 10.125760706677246, 0.2576008971689, 1.187082137006534]
fonds = ["NASDAQ Composite (IXIC)", "Nasdaq 100 (NDX)", "S&P 500 (SPX)", "Индекс Мосбиржи (IMOEX)"]
obligs = ["ОФЗ", "ВТБ", "Газпром", "Золото"]
menu = None
end_time = int(time.time())
start_time = end_time - 31104060 # год в UNIX
user1 = {"name": "Ivan Ivanov", "stocks": {"AAPL": 90540, "TSLA": 20500, "ОФЗ": 60000}, "type": 2}
user2 = {"name": "Nick P.", "stocks": {"AAON": 410, "PXD": 4000, "FMC": 1300, "ОФЗ": 10000}, "type": 3}
user1 = user2

while(menu != 0):
	menu = int(input("""
0 - Выход
1 - Поиск названий акций
2 - График цен акции
3 - Определение риска акции
4 - Рекомендации похожих акций
5 - Рыночная капитализация акции
6 - Долг/капитал акции
7 - Дивидендная история
8 - Целевая цена акции (средние прогнозы фондов)
9 - Ребалансировка портфеля
Ввод: """))

	if(menu == 1):
		# Поиск названий акций
		company_name = input("Поиск: ")
		names_found = json.loads(requests.get("https://investcab.ru/api/csearch?limit=30&query=" + company_name + "&type=EQF&exchange=").json())
		print("Найдены следующие акции:")
		for i in names_found:
			print(i['full_name'],end = ' ')

	elif(menu == 2):
		# Получение цен
		company_name = input("Введите название акции для получения графика: ")
		prices = json.loads(requests.get("https://investcab.ru/api/chistory?symbol=" + company_name + "&resolution=D&from=" + str(start_time) + "&to=" + str(end_time)).json())['c']
		# Вывод цен
		print("\nЦены за " + str(len(prices)) + " дней:\n", prices, end='\n\n')
		print("Цены за последний месяц:\n", prices[-30:])

	elif(menu == 3):
		# Определение риска акций
		company_name = input("Введите название акции: ")
		prices = json.loads(requests.get("https://investcab.ru/api/chistory?symbol=" + company_name + "&resolution=D&from=" + str(start_time) + "&to=" + str(end_time)).json())['c']
		volatility = math.sqrt(np.var(prices)) # Волатильность за месяц
		print("\nВолатильность\n",volatility)
		if(volatility < 12):
			print("Акция имеет низкий уровень рисков.")
		elif(volatility > 12 and volatility < 20):
			print("Акция имеет средний уровень рисков.")
		elif(volatility > 20):
			print("Акция имеет высокий уровень рисков.")

	elif(menu == 4):
		# Рекомендации
		company_name = input("Введите акцию, которой вы уже владеете: ")
		
		# Считаем её риски
		prices = json.loads(requests.get("https://investcab.ru/api/chistory?symbol=" + company_name + "&resolution=D&from=1599587468&to=1630691528").json())['c']
		volatility = math.sqrt(np.var(prices)) # Волатильность за месяц
		
		t_vols = sorted(all_vols)
		volatility = min(all_vols, key=lambda x:abs(x-volatility))
		vols = t_vols[t_vols.index(volatility):t_vols.index(volatility)+5]
		vols += t_vols[t_vols.index(volatility)-5:t_vols.index(volatility)]
		print("Рекомендуем похожие по риск-уровню акции: ")
		for i in vols:
			print(all_stocks[all_vols.index(i)],end = ' ')

	elif(menu == 5):
		# Капитализация акции
		company_name = input("Введите название акции: ").replace('@','.')
		headers = {'User-Agent': 'User agent for work'}
		cap = requests.get("https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&crumb=qQMEtw/8z/0&lang=en-US&region=US&symbols=" + company_name + "&fields=marketCap&corsDomain=finance.yahoo.com", headers=headers).json()
		cap = cap['quoteResponse']['result'][0]['marketCap']['fmt']
		print(cap)
		#cap = requests.get("https://finance.yahoo.com/quote/" + company_name + "/key-statistics?p=" + company_name, headers=headers)
		#start = cap.text.find("underlyingSymbol")+20
		#step = cap.text[start:].find('fmt')
		#print("Капитализация: ", cap.text[start+step+6:start+step+6+cap.text[start+step+6:].find("\"")])

	elif(menu == 6):
		# Долг/капитал акции
		company_name = input("Введите название акции: ").replace('@','.')
		headers = {'User-Agent': 'User agent for work'}
		debt_equity = requests.get("https://finance.yahoo.com/quote/" + company_name + "/key-statistics?p=" + company_name, headers=headers)
		start = debt_equity.text.find("debtToEquity")+15
		step = debt_equity.text[start:].find(':')+1
		print("Долг/капитал: ", debt_equity.text[start+step:start+step+debt_equity.text[start+step:].find(",")])
	
	elif(menu == 7):
		# Дивидендная история акции
		company_name = input("Введите название акции: ").replace('@','.')
		headers = {'User-Agent': 'User agent for work'}
		divs = requests.get("https://query1.finance.yahoo.com/v7/finance/download/" + company_name + "?period1=" + str(end_time - 155520300) + "&period2=" + str(end_time) + "&interval=1d&events=div&includeAdjustedClose=true", headers=headers).text.split('\n')
		for i in divs:
			print(i)

	elif(menu == 8):
		# Целевая цена (прогнозы фондов)
		company_name = input("Введите название акции: ").replace('@','.')
		headers = {'User-Agent': 'User agent for work'}
		target = requests.get("https://finance.yahoo.com/quote/" + company_name + "/analysis?p=" + company_name, headers=headers).text
		start = target.find("targetMeanPrice") # ищем начало целевой цены
		step = target[start:].find("}")+1 # ищем конец параметра
		target = json.loads(target[start+17:start+step])['fmt']
		print(target)

	elif(menu == 9):
		# Ребалансировка портфеля (рекомендации)
		company_names = input("Введите список своих акций через пробел (AAPL TSLA EOAN@DE): ").split(' ')
		invest_type = int(input("""Выберите ваш профиль инвестирования:
1 - Ультраконсервативный (сохранить и сберечь средства)
2 - Консервативный (медленный и стабильный рост)
3 - Умеренный (баланс между уровнем рисков и роста)
4 - Агрессивный (повышенные риски и доходность)
5 - Ультраагрессивный (сверхриски и доходность)
Ввод: """))
		# volatility
		mean_vol = 0
		for company_name in company_names:
			prices = json.loads(requests.get("https://investcab.ru/api/chistory?symbol=" + company_name + "&resolution=D&from=" + str(start_time) + "&to=" + str(end_time)).json())['c']
			volatility = math.sqrt(np.var(prices)) # Волатильность за месяц
			mean_vol += volatility
		mean_vol /= len(company_names)
		print("Средняя волатильность портфеля: ", mean_vol)

		if(mean_vol < 7):
			print("Волатильность соответствует ультраконсервативному профилю.")
			if(invest_type == 4):
				# Если тип инвестора - агрессивный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-45:len(all_vols)-20]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
			if(invest_type == 3):
				# Если тип инвестора - умеренный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-80:len(all_vols)-65]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
			if(invest_type == 2):
				# Если тип инвестора - консервативный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[1400:1430]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
			if(invest_type == 5):
				# Если тип инвестора - ультраконсервативный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-20:len(all_vols)-5]

		elif(mean_vol > 7 and mean_vol < 12):
			print("Волатильность соответствует консервативному профилю.")
			if(invest_type == 1):
				print("Для диверсификации портфеля рекомендуем докупить гос. облигации или акции с низкой волатильностью, такие как: ")
				recommend = sorted(all_vols)[:10]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
				print(*obligs)
				print(*fonds)
			if(invest_type == 4):
				# Если тип инвестора - агрессивный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-45:len(all_vols)-20]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
			if(invest_type == 3):
				# Если тип инвестора - умеренный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-80:len(all_vols)-65]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
			if(invest_type == 5):
				# Если тип инвестора - ультраконсервативный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-20:len(all_vols)-5]

		elif(mean_vol > 12 and mean_vol < 20):
			print("Волатильность соответствует умеренному профилю.")
			if(invest_type == 4):
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-45:len(all_vols)-20]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
			if(invest_type < 3):
				print("Для диверсификации портфеля и снижения рисков рекомендуем докупить гос. облигации или акции с низкой волатильностью, такие как: ")
				recommend = sorted(all_vols)[:10]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
				print(*obligs)
				print(*fonds)

		elif(mean_vol > 20 and mean_vol < 40):
			print("Волатильнось соответствует агрессивному профилю.")
			if(invest_type < 4):
				print("Для диверсификации портфеля и снижения рисков рекомендуем докупить гос. облигации или акции с низкой волатильностью, такие как: ")
				recommend = sorted(all_vols)[:10]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
				print(*obligs)
				print(*fonds)
			if(invest_type == 5):
				# Если тип инвестора - ультраконсервативный
				print("Текущий портфель не соответствует вашим целям. Рекомендуем докупить более волатильные и доходные акции в ваш портфель, такие как: ")
				recommend = sorted(all_vols)[len(all_vols)-20:len(all_vols)-5]

		elif(mean_vol > 40):
			print("Волатильность соответствует ультраагрессивному профилю.")
			if(invest_type < 5):
				print("Для диверсификации портфеля и снижения рисков рекомендуем докупить гос. облигации или акции с низкой волатильностью, такие как: ")
				recommend = sorted(all_vols)[:10]
				for i in recommend:
					print(all_stocks[all_vols.index(i)], end=' ')
				print(*obligs)
				print(*fonds)

		print("Используемый пользователь для демонстрации: ")
		print(user1)
		if(int(input("Запустить ребалансировку портфеля пользователя? \n1 - Да\nEnter: "))):
			other_count = 0
			company_names = [i for i in user1['stocks']]
			if(company_names.count('ОФЗ') != 0):
				obligs_count = user1['stocks']['ОФЗ']
				for i in user1['stocks']:
					other_count += user1['stocks'][i]
				other_count -= obligs_count
				obligs_percent = int(100 * (obligs_count / (other_count + obligs_count)) )

			print("Портфель состоит на " + str(obligs_percent) + "% из облигаций и из акций на " + str(100 - obligs_percent) + "%")

			# user1 = userN # раскомментировать для изменения пользователя
			# счетчик числа рекомендаций
			i = 0
			if(user1['type'] == 1):
				# Ультраконсервативный тип инвестора
				print("Рекомендуем продать акции и оставить в портфеле только облигации.")

			elif(user1['type'] == 2):
				# Консервативный тип инвестора
				while(int(100*((i + obligs_count)/(other_count + obligs_count))) < 80):
					i += 5
				min_different = int(0.05 * (other_count + obligs_count) ) # минимальная разница, которую имеет смысл учитывать - 5% для консервативных
				if(i//1000 > 0 and i > min_different): # ~1000 - цена облигаций ОФЗ и многих других
					print("Закупка " + str(i//1000) + " облигаций ОФЗ обеспечит диверсификацию портфеля и снизит риски, а также позволит поднять аллокацию облигаций до рекомендуемого уровня ~80%.")
					print("Также можно продать какие-либо акции на " + str(i) + " руб.")
				else:
					i = 0
					while(int(100*((i + other_count)/(other_count + obligs_count))) < 20):
						i += 5
					if(i > min_different):
						print("Для увеличения доходности можно докупить акций на " + str(i) + " руб., что также позволит поднять аллокацию акций до рекомендуемого уровня ~20%")
					else:
						print("Ваш портфель в порядке.")

			elif(user1['type'] == 3):
				# Умеренный тип инвестора
				while(int(100*((i + obligs_count)/(other_count + obligs_count))) < 50):
					i += 5
				min_different = int(0.1 * (other_count + obligs_count) ) # минимальная разница, которую имеет смысл учитывать - 10% для умеренных
				if(i//1000 > 0 and i > min_different): # ~1000 - цена облигаций ОФЗ и многих других
					print("Закупка " + str(i//1000) + " облигаций ОФЗ обеспечит диверсификацию портфеля и снизит риски, а также позволит поднять аллокацию облигаций до рекомендуемого уровня ~50%.")
					print("Также можно продать какие-либо акции на " + str(i) + " руб.")
				else:
					i = 0
					while(int(100*((i + other_count)/(other_count + obligs_count))) < 50):
						i += 5
					if(i > min_different):
						print("Для увеличения доходности можно докупить акций на " + str(i) + " руб., что также позволит поднять аллокацию акций до рекомендуемого уровня ~50%")
					else:
						print("Ваш портфель в порядке.")

			elif(user1['type'] == 4):
				# Агрессивный тип инвестора
				while(int(100*((i + obligs_count)/(other_count + obligs_count))) < 20):
					i += 5
				min_different = int(0.15 * (other_count + obligs_count) ) # минимальная разница, которую имеет смысл учитывать - 15% для агрессивных
				if(i//1000 > 0 and i > min_different): # ~1000 - цена облигаций ОФЗ и многих других
					print("Закупка " + str(i//1000) + " облигаций ОФЗ обеспечит диверсификацию портфеля и снизит риски, а также позволит поднять аллокацию облигаций до рекомендуемого уровня ~20%.")
					print("Также можно продать какие-либо акции на " + str(i) + " руб.")
				else:
					i = 0
					while(int(100*((i + other_count)/(other_count + obligs_count))) < 80):
						i += 5
					if(i > min_different):
						print("Для увеличения доходности можно докупить акций на " + str(i) + " руб., что также позволит поднять аллокацию акций до рекомендуемого уровня ~80%")
					else:
						print("Ваш портфель в порядке.")

			elif(user1['type'] == 5):
				# Ультраагресивный тип инвестора
				print("Рекомендуем продать облигации и оставить в портфеле только акции и фонды.")

		
		
		
		
		